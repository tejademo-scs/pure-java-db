name: Aqua

on: pull_request

jobs:
  aqua:
    name: Aqua scanner
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: write  # Needed for upload-artifact action
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: webapp # Replace with your application name
          path: ${{ path.join(github.workspace, '*.jar') }}  # Replace with actual path

      - name: Publish to GitHub Packages Apache Maven  # Optional
        run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}  # Optional if you want to publish to packages

      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --sast --scanners misconfig,vuln,secret --db-repository=registry.aquasec.com/trivy-db:2 --checks-bundle-repository=registry.aquasec.com/trivy-checks:1 --java-db-repository=registry.aquasec.com/trivy-java-db:1 .
          # Access Aqua credentials from secrets

env:
  GITHUB_TOKEN: ${{ secrets.TOKEN }}
  TRIVY_RUN_AS_PLUGIN: 'aqua'
  ACTIONS_RUNTIME_TOKEN: ${{ secrets.TOKEN }}  # Might not be needed depending on your workflow setup
  AQUA_KEY: ${{ secrets.AQUA_KEY }}
  AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
  TRIVY_USERNAME: ${{ secrets.AQUA_USERNAME }}
  TRIVY_PASSWORD: ${{ secrets.AQUA_PASSWORD }}
